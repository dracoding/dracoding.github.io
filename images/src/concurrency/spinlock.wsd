@startuml
left to right direction

class spinlock {
        union {
                struct raw_spinlock rlock;

#ifdef CONFIG_DEBUG_LOCK_ALLOC
# define LOCK_PADSIZE (offsetof(struct raw_spinlock, dep_map))
                struct {
                        u8 __padding[LOCK_PADSIZE];
                        struct lockdep_map dep_map;
                };
#endif

#ifdef CONFIG_LITE_LOCKDEP
# define LOCK_PADSIZE (offsetof(struct raw_spinlock, lite_dep_map))
                struct {
                        u8 __padding[LOCK_PADSIZE];
                        struct lite_lockdep_map lite_dep_map;
                };
#endif
        };
}
note top: spinlock_t的数据结构定义, 

class raw_spinlock {
        arch_spinlock_t raw_lock;
#ifdef CONFIG_DEBUG_SPINLOCK
        unsigned int magic, owner_cpu;
        void *owner;
#endif
#ifdef CONFIG_DEBUG_LOCK_ALLOC
        struct lockdep_map dep_map;
#endif
#ifdef CONFIG_LITE_LOCKDEP
        struct lite_lockdep_map lite_dep_map;
#endif
}
note top: raw_spinlock_t的数据结构定义, 


class qspinlock {
    union {
        atomic_t val;
#ifdef __LITTLE_ENDIAN
        struct {
            u8      locked;
            u8      pending;
        };
        struct {
            u16     locked_pending;
            u16     tail;
        };
#else
        struct {
            u16     tail;
            u16     locked_pending;
        };
        struct {
            u8      reserved[2];
            u8      pending;
            u8      locked;
        };
#endif
    };
}
note top: arch_spinlock_t每个架构有自己的实现, arm64为例, 该结构体定义为qspinlock。 



' note right of irq_domain::ops
'     irq_domain对应的操作方法
' end note




' note right of irq_desc::handle_irq
'     中断处理程序， high level处理,
' end note


spinlock::rlock --* raw_spinlock
raw_spinlock::raw_lock --* qspinlock

@enduml
